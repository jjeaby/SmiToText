import os
import re

SUBHEADINGS = [
    '(0)', '(1)', '(2)', '(3)', '(4)', '(5)', '(6)', '(7)', '(8)', '(9)', '(10)', '(11)', '(12)', '(13)', '(14)',
    '(15)', '(16)', '(17)', '(18)', '(19)', '(20)', '(21)', '(22)', '(23)', '(24)', '(25)', '(26)', '(27)', '(28)',
    '(29)', '(30)', '(31)', '(32)', '(33)', '(34)', '(35)', '(36)', '(37)', '(38)', '(39)', '(40)', '(41)', '(42)',
    '(43)', '(44)', '(45)', '(46)', '(47)', '(48)', '(49)', '(50)', '(51)', '(52)', '(53)', '(54)', '(55)', '(56)',
    '(57)', '(58)', '(59)', '(60)', '(61)', '(62)', '(63)', '(64)', '(65)', '(66)', '(67)', '(68)', '(69)', '(70)',
    '(71)', '(72)', '(73)', '(74)', '(75)', '(76)', '(77)', '(78)', '(79)', '(80)', '(81)', '(82)', '(83)', '(84)',
    '(85)', '(86)', '(87)', '(88)', '(89)', '(90)', '(91)', '(92)', '(93)', '(94)', '(95)', '(96)', '(97)', '(98)',
    '(99)',
    '0)', '1)', '2)', '3)', '4)', '5)', '6)', '7)', '8)', '9)', '10)', '11)', '12)', '13)', '14)', '15)', '16)',
    '17)', '18)', '19)', '20)', '21)', '22)', '23)', '24)', '25)', '26)', '27)', '28)', '29)', '30)', '31)', '32)',
    '33)', '34)', '35)', '36)', '37)', '38)', '39)', '40)', '41)', '42)', '43)', '44)', '45)', '46)', '47)', '48)',
    '49)', '50)', '51)', '52)', '53)', '54)', '55)', '56)', '57)', '58)', '59)', '60)', '61)', '62)', '63)', '64)',
    '65)', '66)', '67)', '68)', '69)', '70)', '71)', '72)', '73)', '74)', '75)', '76)', '77)', '78)', '79)', '80)',
    '81)', '82)', '83)', '84)', '85)', '86)', '87)', '88)', '89)', '90)', '91)', '92)', '93)', '94)', '95)', '96)',
    '97)', '98)', '99)',
    '0.', '1.', '2.', '3.', '4.', '5.', '6.', '7.', '8.', '9.', '10.', '11.', '12.', '13.', '14.', '15.', '16.', '17.',
    '18.', '19.', '20.', '21.', '22.', '23.', '24.', '25.', '26.', '27.', '28.', '29.', '30.', '31.', '32.', '33.',
    '34.', '35.', '36.', '37.', '38.', '39.', '40.', '41.', '42.', '43.', '44.', '45.', '46.', '47.', '48.', '49.',
    '50.', '51.', '52.', '53.', '54.', '55.', '56.', '57.', '58.', '59.', '60.', '61.', '62.', '63.', '64.', '65.',
    '66.', '67.', '68.', '69.', '70.', '71.', '72.', '73.', '74.', '75.', '76.', '77.', '78.', '79.', '80.', '81.',
    '82.', '83.', '84.', '85.', '86.', '87.', '88.', '89.', '90.', '91.', '92.', '93.', '94.', '95.', '96.', '97.',
    '98.', '99.',
    '①', '②', '③', '④', '⑤', '⑥', '⑦', '⑧', '⑨', '⑩', '⑪', '⑫', '⑬', '⑭', '⑮', '⑯', '⑰', '⑱', '⑲', '⑳',
    '(I)', '(II)', '(III)', '(IV)', '(V)', '(VI)', '(VII)', '(VIII)', '(IX)', '(X)', '(XI)', '(XII)', '(XIII)', '(XIV)',
    '(XV)', '(XVI)', '(XVII)', '(XVIII)', '(XIX)', '(XX)',
    '(i)', '(ii)', '(iii)', '(iv)', '(v)', '(vi)', '(vii)', '(viii)', '(ix)', '(x)', '(xi)', '(xii)', '(xiii)', '(xiv)',
    '(xv)', '(xvi)', '(xvii)', '(xviii)', '(xix)', '(xx)',
    '⒈', '⒉', '⒊', '⒋', '⒌', '⒍	', '⒎', '⒏', '⒐', '⒑', '⒒', '⒓', '⒔', '⒕', '⒖', '⒗', '⒘', '⒙', '⒚', '⒛',
    'Ⓐ', 'Ⓑ', 'Ⓒ', 'Ⓓ	', 'Ⓔ', 'Ⓕ', 'Ⓖ', 'Ⓗ', 'Ⓘ', 'Ⓙ', 'Ⓚ', 'Ⓛ', 'Ⓜ	', 'Ⓝ', 'Ⓞ', 'Ⓟ', 'Ⓠ', 'Ⓡ', 'Ⓢ', 'Ⓣ', 'Ⓤ',
    'Ⓥ	', 'Ⓦ', 'Ⓧ', 'Ⓨ', 'Ⓩ',
    'ⓐ', 'ⓑ', 'ⓒ', 'ⓓ	', 'ⓔ', 'ⓕ', 'ⓖ', 'ⓗ', 'ⓘ', 'ⓙ', 'ⓚ', 'ⓛ', 'ⓜ', 'ⓝ', 'ⓞ', 'ⓟ', 'ⓠ', 'ⓡ', 'ⓢ', 'ⓣ', 'ⓤ',
    'ⓥ	', 'ⓦ', 'ⓧ', 'ⓨ', 'ⓩ',
    '1.', '2.', '3.', '4.', '5.', '6.', '7.', '8.', '9.', '10.', '11.', '12.', '13.', '14.', '15.', '16.', '17.', '18.',
    '19.', '20.',
    '㈀', '㈁', '㈂', '㈃', '㈄', '㈅', '㈆', '㈇', '㈈', '㈉', '㈊', '㈋', '㈌', '㈍', '㈎', '㈏', '㈐', '㈑', '㈒', '㈓', '㈔', '㈕',
    '㈖', '㈗', '㈘', '㈙', '㈚', '㈛', '㉠', '㉡', '㉢', '㉣', '㉤', '㉥', '㉦', '㉧', '㉨', '㉩', '㉪', '㉫', '㉬', '㉭', '㉮', '㉯',
    '㉰', '㉱', '㉲', '㉳', '㉴', '㉵', '㉶', '㉷', '㉸', '㉹', '㉺', '㉻', '０', '１', '２', '３', '４', '５', '６', '７', '８', '９',
    'Ａ', 'Ｂ', 'Ｃ', 'Ｅ', 'Ｄ', 'Ｆ', 'Ｇ', 'Ｈ', 'Ｉ', 'Ｊ', 'Ｋ', 'Ｌ', 'Ｍ', 'Ｎ', 'Ｏ', 'Ｐ', 'Ｑ', 'Ｒ', 'Ｓ', 'Ｔ', 'Ｕ', 'Ｖ',
    'Ｗ', 'Ｘ', 'Ｙ', 'Ｚ',
    'A.', 'B.', 'C.', 'D.', 'E.', 'F.', 'G.', 'H.', 'I.', 'J.', 'K.', 'L.', 'M.', 'N.', 'O.', 'P.', 'Q.', 'R.', 'S.',
    'T.',
    'U.', 'V.', 'W.', 'X.', 'Y.', 'Z.',
    'A)', 'B)', 'C)', 'D)', 'E)', 'F)', 'G)', 'H)', 'I)', 'J)', 'K)', 'L)', 'M)', 'N)', 'O)', 'P)', 'Q)', 'R)', 'S)',
    'T)',
    'U)', 'V)', 'W)', 'X)', 'Y)', 'Z)',
    '(A)', '(B)', '(C)', '(D)', '(E)', '(F)', '(G)', '(H)', '(I)', '(J)', '(K)', '(L)', '(M)', '(N)', '(O)', '(P)',
    '(Q)',
    '(R)', '(S)', '(T)', '(U)', '(V)', '(W)', '(X)', '(Y)', '(Z)',
    'ａ', 'ｂ', 'ｃ', 'ｄ', 'ｅ', 'ｆ', 'ｇ', 'ｈ', 'ｉ', 'ｊ', 'ｋ', 'ｌ',
    'ｍ', 'ｎ', 'ｏ', 'ｐ', 'ｒ', 'ｓ',
    'ｔ', 'ｕ', 'ｖ', 'ｗ', 'ｘ', 'ｙ', 'ｚ',
    'a.', 'b.', 'c.', 'd.', 'e.', 'f.', 'g.', 'h.', 'i.', 'j.', 'k.', 'l.', 'm.', 'n.', 'o.', 'p.', 'q.', 'r.', 's.',
    't.',
    'u.', 'v.', 'w.', 'x.', 'y.', 'z.',
    'a)', 'b)', 'c)', 'd)', 'e)', 'f)', 'g)', 'h)', 'i)', 'j)', 'k)', 'l)', 'm)', 'n)', 'o)', 'p)', 'q)', 'r)', 's)',
    't)',
    'u)', 'v)', 'w)', 'x)', 'y)', 'z)',
    '(a)', '(b)', '(c)', '(d)', '(e)', '(f)', '(g)', '(h)', '(i)', '(j)', '(k)', '(l)', '(m)', '(n)', '(o)', '(p)',
    '(q)',
    '(r)', '(s)', '(t)', '(u)', '(v)', '(w)', '(x)', '(y)', '(z)',
    '가)', '나)', '다)', '라)', '마)', '바)', '사)', '아)', '자)', '차)',
    '카)', '타)', '파)', '하)',
    '(가)', '(나)', '(다)', '(라)', '(마)', '(바)', '(사)', '(아)', '(자)', '(차)', '(카)', '(타)', '(파)', '(하)',
    '가.', '나.', '다.', '라.', '마.', '바.', '사.', '아.', '자.', '차.', '카.', '타.', '파.', '하.',
    'ㄱ.', 'ㄴ.', 'ㄷ.', 'ㄹ.', 'ㅁ.', 'ㅂ.', 'ㅅ.', 'ㅇ.', 'ㅈ.', 'ㅊ.', 'ㅋ.', 'ㅌ.', 'ㅍ.', 'ㅎ.',
    'ㄱ)', 'ㄴ)', 'ㄷ)', 'ㄹ)', 'ㅁ)', 'ㅂ)', 'ㅅ)', 'ㅇ)', 'ㅈ)', 'ㅊ)', 'ㅋ)', 'ㅌ)', 'ㅍ)', 'ㅎ)',
    '(ㄱ)', '(ㄴ)', '(ㄷ)', '(ㄹ)', '(ㅁ)', '(ㅂ)', '(ㅅ)', '(ㅇ)', '(ㅈ)', '(ㅊ)', '(ㅋ)', '(ㅌ)', '(ㅍ)', '(ㅎ)',
    '⑴', '⑵', '⑶', '⑷', '⑸', '⑹', '⑺', '⑻', '⑼', '⑽', '⑾', '⑿', '⒀', '⒁', '⒂'

]


def isEnglishOrKorean(input_s):
    k_count = 0
    e_count = 0
    for c in input_s:
        if ord('가') <= ord(c) <= ord('힣'):
            k_count += 1
        elif ord('a') <= ord(c.lower()) <= ord('z'):
            e_count += 1
    return "k" if k_count >= 1 else "e"


filenames = os.listdir("./")
for idx, f in enumerate(filenames):
    if f.endswith('.hwp.txt'):
        en = open(str(idx) + "_en.txt", "w", encoding='utf-8')
        ko = open(str(idx) + "_ko.txt", "w", encoding='utf-8')
        with open(f, 'r', encoding='utf-8') as fp:
            for line in fp:
                line = line.strip()

                if len(line) >= 1:
                    for head in SUBHEADINGS:
                        # if head == '①':
                        #     print(head)
                        if line.startswith(head):
                            line = line.replace(head, "", 1)
                        line = line.strip()

                    if line.startswith("．"):
                        line = line.replace("．", " ", 1)
                        line = line.strip()
                    if line.startswith("."):
                        line = line.replace(".", " ", 1)
                        line = line.strip()
                    if line.startswith("-"):
                        line = line.replace("-", " ", 1)
                        line = line.strip()


                    line = line.replace("☞", " ")
                    line = line.replace("㊞", "")
                    line = line.replace("ⓒ", "")
                    line = line.replace("“", "\"")
                    line = line.replace("”", "\"")
                    line = line.replace("  ", " ")
                    line = line.replace("  ", " ")
                    line = line.replace("  ", " ")
                    line = line.replace("  ", " ")
                    line = line.replace("  ", " ")
                    line = line.replace("  ", " ")
                    line = line.replace("  ", " ")
                    line = line.replace("  ", " ")

                    line = line.strip()

                    line = re.sub('<.+?>', '', line, 0, re.I | re.S)
                    line = re.sub('\(.+?\)', '', line, 0, re.I | re.S)


                    if len(line.strip()) >= 1 :
                        ret = isEnglishOrKorean(line)
                        if ret == 'k':
                            if (line.find("[")  < 0 and line.find("]") < 0 ) and line.find("_") < 0 :
                                ko.write(line.strip() + '\n')
                        else:
                            if (line.find("[")  < 0 and line.find("]") < 0 ) and line.find("_") < 0:
                                en.write(line.strip() + '\n')
        en.close()
        ko.close()
